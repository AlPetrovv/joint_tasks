"""empty message

Revision ID: 566de2412369
Revises: 
Create Date: 2025-08-02 21:41:28.173438

"""
from typing import Sequence, Union

import fastapi_users_db_sqlalchemy
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '566de2412369'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('announcements',
    sa.Column('title', sa.String(length=100), nullable=True),
    sa.Column('text', sa.String(length=1000), nullable=False),
    sa.Column('autor', sa.String(length=100), nullable=True),
    sa.Column('date', sa.Date(), server_default=sa.text('(CURRENT_DATE)'), nullable=False),
    sa.Column('important', sa.Boolean(), server_default=sa.text('(false())'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_announcements'))
    )
    op.create_table('folders',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_folders'))
    )
    op.create_table('users',
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_table('auth_users',
    sa.Column('phone_number', sa.Unicode(length=17), nullable=True),
    sa.Column('registration_date', sa.Date(), server_default=sa.text('(CURRENT_DATE)'), nullable=False),
    sa.Column('last_login', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'MEMBER', 'COUCH', 'OWNER', name='userrole'), server_default='member', nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_auth_users_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_auth_users')),
    sa.UniqueConstraint('phone_number', name=op.f('uq_auth_users_phone_number'))
    )
    op.create_index(op.f('ix_auth_users_email'), 'auth_users', ['email'], unique=True)
    op.create_table('tasks',
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('text', sa.String(length=1000), nullable=False),
    sa.Column('note', sa.String(length=1000), nullable=True),
    sa.Column('start_time', sa.Date(), nullable=False),
    sa.Column('end_time', sa.Date(), nullable=False),
    sa.Column('completed_time', sa.DateTime(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=False),
    sa.Column('priority', sa.Enum('low', 'medium', 'high', 'highest', 'expired', 'cancelled', name='taskpriorityenum'), server_default='Low', nullable=False),
    sa.Column('where', sa.Enum('home', 'work', 'sport', 'family', 'study', 'other', name='taskwhereenum'), server_default='Home', nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('folder_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.CheckConstraint('start_time <= end_time', name=op.f('ck_tasks_check_start_end_ttime')),
    sa.ForeignKeyConstraint(['folder_id'], ['folders.id'], name=op.f('fk_tasks_folder_id_folders'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name=op.f('fk_tasks_task_id_tasks'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_tasks_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tasks'))
    )
    op.create_table('access_tokens',
    sa.Column('auth_user_id', sa.Integer(), nullable=True),
    sa.Column('token', sa.String(length=43), nullable=False),
    sa.Column('created_at', fastapi_users_db_sqlalchemy.generics.TIMESTAMPAware(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['auth_user_id'], ['auth_users.id'], name=op.f('fk_access_tokens_auth_user_id_auth_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('token', name=op.f('pk_access_tokens'))
    )
    op.create_index(op.f('ix_access_tokens_created_at'), 'access_tokens', ['created_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_access_tokens_created_at'), table_name='access_tokens')
    op.drop_table('access_tokens')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_auth_users_email'), table_name='auth_users')
    op.drop_table('auth_users')
    op.drop_table('users')
    op.drop_table('folders')
    op.drop_table('announcements')
    # ### end Alembic commands ###
